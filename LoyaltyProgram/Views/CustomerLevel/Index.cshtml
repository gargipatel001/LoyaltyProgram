@model LoyaltyProgram.Models.CustomerLevel

@{
    ViewBag.Title = "Customer Level";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles
{
    <style>
        .k-window-titlebar .k-window-actions {
            position: relative !important;
        }
    </style>
}
@(Html.Kendo().Grid<LoyaltyProgram.Models.CustomerLevel>()
          .Name("gvCustomerLevel")
          .Columns(columns =>
          {
              columns.Command(c => { c.Edit(); }).Width(20).Title("Action").HtmlAttributes(new { style = "text-align:center;" }).HeaderHtmlAttributes(new { style = "text-align:center;" });
              columns.Bound(c => c.LevelId).Width(100).Visible(false);
              columns.Bound(c => c.LevelName).Width(300).Title("Level");
              columns.Bound(c => c.PointsRangeFrom).Width(150).Title("Points From");
              columns.Bound(c => c.PointsRangeTo).Width(150).Title("Points To");
               //columns.Command(command => command.Custom("Change Status").HtmlAttributes(new { @class = "btn btn-primary", @id = "btnstyle", visible = false }).Click("UpdateStatus")).Width(30).HtmlAttributes(new { align = "center" }).HeaderHtmlAttributes(new { style = "text-align:center;" });
              //columns.Bound(c => c.RoleDescription).Width(100).Title("Description");
          })
          .Sortable()
          .Filterable()
          .Events(events => { events.Edit("insertPopupCaption"); events.Cancel("gvonCancel"); })
          .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_CreateOrUpdate").Window(w => w.Title("Customer Level").Name("customedit").Width(420).Height(400)))
          .ToolBar(toolbar => { toolbar.Create().Text("Add New Level"); })
          .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
          .DataSource(dataSource => dataSource
              .Ajax()
              .Model(model =>
                {
                    model.Id(m => m.LevelId);
               })
              .Events(events =>
               {

                events.RequestEnd("onRequestEnd");
              })
               .Create("Create", "CustomerLevel")
               .Update(update => update.Action("Update", "CustomerLevel"))
              .Read(read => read.Action("Select", "CustomerLevel"))
              .PageSize(10)
          )
)
<div class="col-sm-3">

    <span id="popupNotification"></span>

</div>
@section Scripts{
    <script>
         var wnd;
         $(document).ready(function () {

        wnd = $("#modalWindow").kendoWindow({
            title: "Confirmation!",
            modal: true,
            visible: false,
            resizable: false,
            width: 300
        }).data("kendoWindow");
         });
         function HideButtons(e) {

        setKendoGridButtons(e.sender.wrapper[0].id);

        var grid = $("#gvCustomerLevel").data("kendoGrid");
        var gridData = grid.dataSource.view();

        for (var i = 0; i < gridData.length; i++) {
            var currentUid = gridData[i].uid;
            if (gridData[i].IsActive != null) {
                var currenRow = grid.table.find("tr[data-uid='" + currentUid + "']");

                if (gridData[i].IsActive == true) {

                    $(currenRow).find(".k-grid-ChangeStatus").text("Deactivate");
                    $(currenRow).find(".k-grid-edit").show();

                }
                else {

                    $(currenRow).find(".k-grid-ChangeStatus").text("Activate");
                    $(currenRow).find(".k-grid-edit").hide();

                }

            }
        }
        };
         function UpdateStatus(e) {


        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        wnd.center().open();

        $("#btnyes").unbind().click(function () {
            $.ajax({
                type: 'POST',
                dataType: 'json',
                url: '@Url.Action("UpdateStatus", "PromotionType")',
                data: { Id: dataItem.PromotionTypeId },
                //async: false,
                success: function (Data) {

                    $("#gvCustomerLevel").data("kendoGrid").dataSource.read();

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert('error');
                }
            })
            wnd.close();
        });

        $("#btnno").unbind().click(function () {
            wnd.close();
            topPropagation();
        });



        };
            function ShowNotification(msg, type) {
        var popupNotification = $("#popupNotification").kendoNotification({
            autoHideAfter: 7000,
            hideOnClick: true,
            animation: {
                open: {
                    effects: "slideIn:left"
                },
                close: {
                    effects: "slideIn:left",
                    reverse: true
                }
            },
            position: {
                pinned: true,
                bottom: 60,
                right: 40
            }
        }).data("kendoNotification");
        popupNotification.show(msg, type);
    }
        function databoundEvent(e) {
            setKendoGridButtons(e.sender.wrapper[0].id);
        }
        function gvonCancel(e) {
            setKendoGridButtons(e.sender.wrapper[0].id);
        }

        function setKendoGridButtons(gvCustomerLevel) {
            setTimeout(function () {
                $("#" + gvCustomerLevel + " .k-grid-edit").html("<span class='fa fa-pencil fa-lg'></span>").css("min-width", "10px").removeClass("k-button");
                $("#" + gvCustomerLevel + " .k-grid-delete").html("<span  class='fa fa-times fa-lg'></span>").css("min-width", "10px").removeClass("k-button ");

            });
        }
        function onRequestEnd(e) {
            if (e.type == "create") {
                $("#gvCustomerLevel").data("kendoGrid").dataSource.read();
                if (e.response != null && e.response.Errors == null) {

                  ShowNotification("Success", "success");
                }

            }
        }
        function insertPopupCaption(e) {

            if (e.model.isNew()) {

                $('.k-grid-update').text("Create");
                 $("#txtLevelName").attr("readonly", false);
                $('.k-grid-update').on('click', function (event) {
                    var str = $("#txtLevelName").val()
                    ValidateProcess(event, str, function (test) {

                        if (test == false) {
                            event.preventDefault();
                            event.stopPropagation();

                        }

                    });

                });

            }

            else {
                $("#txtLevelName").attr("readonly", true);
                //$("#txtProjectID").attr("readonly", true);
                e.container.data("kendoWindow").bind("deactivate", function () {
                    $("#gvCustomerLevel").data("kendoGrid").dataSource.read();
                })
            }
        }
            function ValidateProcess(event, str, fn) {
        $.ajax({
            type: 'GET',
            url: "@Url.Action("CheckCustomerLevels", "CustomerLevel")?customerLevel=" + str,
            dataType: 'json',
            async: false,
            success: function (data) {
            if (data > 0) {

                var staticNotification = $("#staticNotification").kendoNotification({
                    appendTo: "#appendto"
                }).data("kendoNotification");

                staticNotification.show(kendo.toString("Level Type already exists"), "error");
                var container = $(staticNotification.options.appendTo);
                container.scrollTop(container[0].scrollHeight);
                fn(false);
            }
        }
        });
    }

    </script>
}

